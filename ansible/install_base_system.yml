---
- name: Load variables generated at install time
  ansible.builtin.include_vars: /etc/wod.yml

- name: Ensure that required packages are installed for repo setup
  become: true
  become_user: root
  ansible.builtin.apt:
    pkg:
      - apt-transport-https
    state: present
    update_cache: true
  when:
    - ansible_os_family == "Debian"

- name: Ensure that common packages are installed for repo setup
  become: true
  become_user: root
  ansible.builtin.package:
    name:
      - curl
      - gnupg2
    state: present

- name: Add universe repository into sources list
  become: true
  become_user: root
  ansible.builtin.apt_repository:
    repo: deb http://archive.ubuntu.com/ubuntu {{ ansible_distribution_release }}-security universe
    state: present
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version >= "20"

- name: Add yq ppa repository into sources list
  become: true
  become_user: root
  ansible.builtin.apt_repository:
    repo: ppa:rmescandon/yq
    state: present
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version <= "22"

- name: Add EPEL repository into repo list
  become: true
  become_user: root
  ansible.builtin.yum:
    name: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
    state: present
  when:
    - ansible_distribution == "CentOS"

- name: Update apt cache
  become: true
  become_user: root
  ansible.builtin.apt:
    update_cache: true
  changed_when: false
  when:
    - ansible_os_family == "Debian"

- name: Ensure all required packages are installed
  become: true
  become_user: root
  ansible.builtin.package:
    name:
      - vim
      - rsync
      - unzip
      - git
    state: present

- name: Ensure all unwanted common base packages are uninstalled
  become: true
  become_user: root
  ansible.builtin.package:
    pkg:
      - systemd-timesyncd
    state: absent
  when:
    - ansible_distribution == "Ubuntu"

- name: Ensure all required common base packages are installed
  become: true
  become_user: root
  ansible.builtin.package:
    pkg:
      - ntp
      - python3-virtualenv
    state: present
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "Ubuntu"

- name: Ensure all required Ubuntu packages are installed
  become: true
  become_user: root
  ansible.builtin.package:
    pkg:
      - ufw
      - cron
      - iputils-ping
      - python3-venv
      - yq
    state: present
  when:
    - ansible_distribution == "Ubuntu"

- name: Ensure all required Rocky packages are installed
  become: true
  become_user: root
  ansible.builtin.package:
    pkg:
      - chrony
      - cronie
      - epel-release
    state: present
  when:
    - ansible_distribution == "Rocky" or ansible_distribution == "CentOS"

- name: Ensure all required pip packages are installed
  become: true
  become_user: root
  ansible.builtin.pip:
    name:
      - yq
    state: present
  when:
    - ansible_distribution == "CentOS" or ansible_distribution == "Rocky"

- name: Configure LDAP client 1/3
  become: true
  become_user: root
  ansible.builtin.template:
    src: "{{ WODSYSDIR }}/ldap.conf.j2"
    dest: /etc/ldap.conf
    owner: root
    group: root
    mode: '0644'
  when: WODLDAPSETUP == "1"

- name: Configure LDAP client 2/3
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: /etc/openldap/ldap.conf
    line: 'URI ldap://{{ WODLDAPSRVNAME }}'
    state: present
  when: WODLDAPSETUP == "1"

- name: Configure LDAP client 3/3
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: /etc/openldap/ldap.conf
    line: 'BASE {{ WODLDAPDMN }}'
    state: present
  when: WODLDAPSETUP == "1"

- name: Configure nsswitch.conf for LDAP client 1/2
  become: true
  become_user: root
  ansible.builtin.replace:
    path: /etc/nsswitch.conf
    # find ldap if any and remove it
    regexp: '\bldap\b'
    replace: ''
  with_items:
    - passwd
    - shadow
    - group
    - netgroup
    - automount
  when: WODLDAPSETUP == "1"

- name: Configure nsswitch.conf for LDAP client 2/2
  become: true
  become_user: root
  ansible.builtin.lineinfile:
    path: /etc/nsswitch.conf
    # force ldap on that line
    regexp: '^({{ item }}):(\s+)(.+)$'
    backrefs: true
    line: '\1:\2ldap \3'
    state: present
  with_items:
    - passwd
    - shadow
    - group
    - netgroup
    - automount
  when: WODLDAPSETUP == "1"

- name: Ensure LDAP RPM required packages are installed
  become: true
  become_user: root
  ansible.builtin.package:
    name:
      - nss-pam-ldapd
    state: present
  when:
    - ansible_distribution == "CentOS"
    - WODLDAPSETUP == "1"

- name: Setup authconfig for LDAP
  become: true
  become_user: root
  ansible.builtin.command:
    cmd: authconfig-tui --enableldap --enableldapauth --ldapserver="{{ WODLDAPSRVNAME }}" --ldapbasedn="{{ WODLDAPDMN }}" --disableldaptls --kickstart --update
  register: cmd_res
  # Do not fail when returning 7
  failed_when: cmd_res.rc < 7
  changed_when: false
  when:
    - ansible_distribution == "CentOS"
    - WODLDAPSETUP == "1"

- name: Enable nslcd service
  become: true
  become_user: root
  ansible.builtin.systemd:
    state: started
    daemon_reload: true
    enabled: true
    name: nslcd
  when: WODLDAPSETUP == "1"
